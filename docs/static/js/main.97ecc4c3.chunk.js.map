{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","category","id","Date","getTime","name","type","value","onChange","target","placeholder","getGif","a","url","encodeURI","fetch","res","json","data","gifs","map","img","title","images","downsized_medium","length","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAcvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,QACXP,GAAc,SAACQ,GAAD,OAAe,CAACC,IAAI,IAAIC,MAAOC,UAAWC,KAAMV,IAAhD,mBAAgEM,OAElFL,EAAc,KAId,SACI,uBACIU,KAAK,OACLC,MAAOZ,EACPa,SAhBc,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,QAgBfG,YAAY,qB,+BCvBfC,EAAM,uCAAG,WAAOV,GAAP,uBAAAW,EAAA,6DACZC,EADY,iDAE6BC,UAAUb,GAFvC,+DAGAc,MAAMF,GAHN,cAGZG,EAHY,gBAKKA,EAAIC,OALT,uBAKVC,EALU,EAKVA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAU,CAC5BnB,GAAImB,EAAInB,GACRoB,MAAOD,EAAIC,MAAQD,EAAIC,MAAQ,aAC/BT,IAAKQ,EAAIE,OAAOC,iBAAiBX,QATnB,kBAYXM,EAAKM,OAASN,EAAO,CAAC,CACzBjB,IAAI,IAAIC,MAAOC,UACfkB,MAAM,GAAD,OAAMrB,EAAN,cACLY,IAAK,+HAfS,4CAAH,sDCWJa,EATK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC1B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKP,IACpB,kCAAKA,EAAL,WCcGQ,EAhBC,SAAC,GAAkB,IAAhB7B,EAAe,EAAfA,SAAe,ECDP,SAAEA,GAAe,IAAD,EACbP,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAcvC,OARAC,qBAAU,WACNvB,EAAQV,GACHkC,MAAM,SAAAhB,GAAI,OAAIc,EAAS,CACpBf,KAAMC,EACNY,SAAS,SAElB,CAAE9B,IAEE+B,EDZwBI,CAAYnC,GAA/BsB,EADkB,EACvBL,KAAaa,EADU,EACVA,QAEpB,OACI,qCACI,qBAAIJ,UAAU,sCAAd,cAAsD1B,EAAtD,OACE8B,GAAW,mBAAGJ,UAAU,sCAAb,0BACb,qBAAKA,UAAU,YAAf,SACKJ,EAAOH,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAInB,aEe3BmC,EAvBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,CAACQ,IAAI,IAAIC,MAAOC,UAAWC,KAAM,wBAFxD,mBAEhBiC,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWlB,KAAK,gBAAElB,EAAF,EAAEA,GAAIG,EAAN,EAAMA,KAAN,OACZ,cAAC,EAAD,CAEIJ,SAAUI,GADLH,Y,MCZjCqC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.97ecc4c3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim()) {\r\n            setCategories((category) => [{id: new Date().getTime(), name: inputValue}, ...category]);\r\n        }\r\n        setInputValue(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Agregar anime\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGif = async (category) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=wlwro4zpe9Y5wEOlSHfEKf93FG9YlB3I`;\r\n    const res = await fetch(url);\r\n\r\n    const { data } = await res.json();\r\n    const gifs = data.map((img) => ({\r\n        id: img.id,\r\n        title: img.title ? img.title : 'Sin titulo',\r\n        url: img.images.downsized_medium.url,\r\n    }));\r\n\r\n    return gifs.length ? gifs : [{\r\n        id: new Date().getTime(),\r\n        title: `${ category } not found`,\r\n        url: 'https://media4.giphy.com/media/14uQ3cOFteDaU/giphy.gif?cid=64611a76ikrvbhq516pntx3a1nfa0uzt5e6ejsp63jh8xnnr&rid=giphy.gif'\r\n    }];\r\n};","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const {data:images, loading} = useFetchGif(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInUp\"> {category} </h3>\r\n            { loading && <p className=\"animate__animated animate__fadeInUp\"> Loading... </p> }\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => (\r\n                    <GifGridItem key={img.id} {...img} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif( category )\r\n            .then( gifs => setState({\r\n                data: gifs,\r\n                loading: false\r\n            }) );\r\n    }, [ category ]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([{id: new Date().getTime(), name: 'Shingeki No Kyojin'}]);\r\n\r\n    return (\r\n        <>\r\n            <h1> GifExpertApp </h1>   \r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                { \r\n                    categories.map( ({id, name}) => (\r\n                        <GifGrid \r\n                            key={id}\r\n                            category={name}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}